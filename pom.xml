<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<packaging>pom</packaging>
	<modules>
		<module>webDemoApp</module>
		<module>webDemoApp2</module>
	</modules>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.0</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.st-ssm.github.io</groupId>
	<artifactId>junw</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<!--<version>0.0.1-REALISE</version>-->
	<!--什么时候，这个项目可以工作了，就可以开始正式版本了，嘻嘻-->
	<name>junw</name>
	<description>st-ssm.github.io</description>
	<properties>
		<java.version>17</java.version>
		<repackage.classifier/>
		<spring-native.version>0.11.4</spring-native.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<version>2.7.3</version>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>2.7.4</version>
			<!--<scope>test</scope>-->
			<!--上面Descope表示作用范围-->
			<!--在没有说明的情况下，scope默认就是compile-->
			<!--如果我把mysql这些数据库驱动jar包设置为runtime-->
			<!--那么我在日常使用的过程中，是无法访问这些类的-->
		</dependency>
		<dependency>
			<groupId>org.springframework.experimental</groupId>
			<artifactId>spring-native</artifactId>
			<version>${spring-native.version}</version>
		</dependency>
		<!--<dependency>-->
		<!--	<groupId>org.mybatis</groupId>-->
		<!--	<artifactId>mybatis</artifactId>-->
		<!--	<version>3.5.11</version>-->
		<!--</dependency>-->
		<!--<dependency>-->
		<!--	<groupId>mysql</groupId>-->
		<!--	<artifactId>mysql-connector-java</artifactId>-->
		<!--	<version>8.0.30</version>-->
		<!--</dependency>-->
		<!--我真他妈是个土狗，这些都不知道，写代码太好玩了hh-->
		<!-- 添加slf4j日志api -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>2.0.1</version>
		</dependency>
		<!-- 添加logback-classic依赖 -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.4.1</version>
		</dependency>
		<!-- 添加logback-core依赖 -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>1.4.1</version>
		</dependency>
		<!--logback一共有三个依赖，同时还有一个需要放到resource下面的配置文件-->


		<!--<dependency>-->
		<!--	<groupId>org.springframework.boot</groupId>-->
		<!--	<artifactId>spring-boot-devtools</artifactId>-->
		<!--	<version>2.7.3</version>-->
		<!--	<scope>runtime</scope>-->
		<!--	<optional>true</optional>-->
		<!--</dependency>-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<version>2.7.3</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>2.7.3</version>
			<scope>test</scope>
		</dependency>
		<!--<dependency>-->
		<!--	<groupId>org.springframework.boot</groupId>-->
		<!--	<artifactId>spring-boot-starter-test</artifactId>-->
		<!--	<version>2.7.3</version>-->
		<!--</dependency>-->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>2.0.14.graal</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
					<classifier>${repackage.classifier}</classifier>
					<image>
						<builder>paketobuildpacks/builder:tiny</builder>
						<env>
							<BP_NATIVE_IMAGE>true</BP_NATIVE_IMAGE>
						</env>
					</image>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.experimental</groupId>
				<artifactId>spring-aot-maven-plugin</artifactId>
				<version>${spring-native.version}</version>
				<executions>
					<execution>
						<id>test-generate</id>
						<goals>
							<goal>test-generate</goal>
						</goals>
					</execution>
					<execution>
						<id>generate</id>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<repositories>
		<repository>
			<id>spring-releases</id>
			<name>Spring Releases</name>
			<url>https://repo.spring.io/release</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-releases</id>
			<name>Spring Releases</name>
			<url>https://repo.spring.io/release</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<profiles>
		<profile>
			<id>native2</id>
			<properties>
				<sonar.organization>wo1261931780</sonar.organization>
				<sonar.host.url>https://sonarcloud.io</sonar.host.url>
			</properties>
		</profile>
		<profile>
			<id>native</id>
			<properties>
				<repackage.classifier>exec</repackage.classifier>
				<native-buildtools.version>0.9.11</native-buildtools.version>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.junit.platform</groupId>
					<artifactId>junit-platform-launcher</artifactId>
					<scope>test</scope>
					<!--这种比较特殊的，就是自动配置到测试环境中-->
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<!--<plugin>-->
					<!--	<groupId>org.graalvm.buildtools</groupId>-->
					<!--	<artifactId>native-maven-plugin</artifactId>-->
					<!--	<version>${native-buildtools.version}</version>-->
					<!--	<extensions>true</extensions>-->
					<!--	<executions>-->
					<!--		<execution>-->
					<!--			<id>test-native</id>-->
					<!--			<phase>test</phase>-->
					<!--			<goals>-->
					<!--				<goal>test</goal>-->
					<!--			</goals>-->
					<!--		</execution>-->
					<!--		<execution>-->
					<!--			<id>build-native</id>-->
					<!--			<phase>package</phase>-->
					<!--			<goals>-->
					<!--				<goal>build</goal>-->
					<!--			</goals>-->
					<!--		</execution>-->
					<!--	</executions>-->
					<!--</plugin>-->
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<fork>true</fork>
							<addResources>true</addResources>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
